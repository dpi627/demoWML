// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace demoWML.Models;

public partial class WML_SD_A99Context : DbContext
{
    public WML_SD_A99Context(DbContextOptions<WML_SD_A99Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<AccountPhoneNumber> AccountPhoneNumbers { get; set; }

    public virtual DbSet<AdmissionRecord> AdmissionRecords { get; set; }

    public virtual DbSet<Museum> Museums { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<Ticket> Tickets { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Chinese_Taiwan_Stroke_CI_AS");

        modelBuilder.Entity<Account>(entity =>
        {
            entity.ToTable("Account");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.FirstName).HasMaxLength(50);
            entity.Property(e => e.HashPassword).HasMaxLength(200);
            entity.Property(e => e.LastName).HasMaxLength(50);
            entity.Property(e => e.Username).HasMaxLength(20);
        });

        modelBuilder.Entity<AccountPhoneNumber>(entity =>
        {
            entity.ToTable("AccountPhoneNumber");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.PhoneExtension)
                .HasMaxLength(7)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.Account).WithMany(p => p.AccountPhoneNumbers)
                .HasForeignKey(d => d.AccountId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AccountPhoneNumber_Account");
        });

        modelBuilder.Entity<AdmissionRecord>(entity =>
        {
            entity.ToTable("AdmissionRecord");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.MuseumId).HasColumnName("MuseumID");
            entity.Property(e => e.TicketId).HasColumnName("TicketID");

            entity.HasOne(d => d.Museum).WithMany(p => p.AdmissionRecords)
                .HasForeignKey(d => d.MuseumId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AdmissionRecord_Museum");

            entity.HasOne(d => d.Ticket).WithMany(p => p.AdmissionRecords)
                .HasForeignKey(d => d.TicketId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AdmissionRecord_Ticket");
        });

        modelBuilder.Entity<Museum>(entity =>
        {
            entity.ToTable("Museum");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.City).HasMaxLength(60);
            entity.Property(e => e.CountryCode)
                .HasMaxLength(6)
                .IsUnicode(false);
            entity.Property(e => e.Description).HasMaxLength(512);
            entity.Property(e => e.Latitude).HasColumnType("numeric(12, 9)");
            entity.Property(e => e.Logitude).HasColumnType("numeric(12, 9)");
            entity.Property(e => e.Name).HasMaxLength(200);
            entity.Property(e => e.OsmId).HasColumnName("OsmID");
            entity.Property(e => e.Street).HasMaxLength(200);
            entity.Property(e => e.Website).HasMaxLength(256);
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.ToTable("Order");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.Amount).HasColumnType("decimal(7, 2)");
            entity.Property(e => e.Discount).HasColumnType("decimal(7, 2)");
            entity.Property(e => e.OrderNumber)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TotalAmount).HasColumnType("decimal(7, 2)");

            entity.HasOne(d => d.Account).WithMany(p => p.Orders)
                .HasForeignKey(d => d.AccountId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Order_Account");
        });

        modelBuilder.Entity<Ticket>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_OrderWithTicket");

            entity.ToTable("Ticket");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Amount).HasColumnType("decimal(7, 2)");
            entity.Property(e => e.FirstName).HasMaxLength(120);
            entity.Property(e => e.LastName).HasMaxLength(120);
            entity.Property(e => e.Number)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.OrderId).HasColumnName("OrderID");

            entity.HasOne(d => d.Order).WithMany(p => p.Tickets)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrderWithTicket_Order");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}